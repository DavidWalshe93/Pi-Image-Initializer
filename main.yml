- name: "Setup Pi"
  hosts: localhost
  become: yes
  connection: local
  vars:
    username: "{{ lookup('env', 'USER') }}"
  vars_prompt:
    - name: password
      prompt: "What is the new password (Enter to skip)?"
      private: yes
  tasks:
    - name: "Who am I?"
      debug:
        msg: "Running as {{username}}"
    # -----------------------------------------------------------
    # Load Parameters
    # -----------------------------------------------------------
    - name: Include vars of vars.yaml into the 'network' variable.
      include_vars:
        file: vars.yml
        name: network
    # -----------------------------------------------------------
    # Set Static IP Address on PI
    # -----------------------------------------------------------
    - name: Checking if static IP address is set
      shell: grep -c "interface wlan0" /etc/dhcpcd.conf || true
      register: static_ip_set
    - name: Set static IP address
      lineinfile:
        path: /etc/dhcpcd.conf
        insertafter: EOF
        line: "{{ item }}"
      loop:
        - "\n"
        - "# Adding to assign static IP address."
        - "# -----------------------------------"
        - interface wlan0
        - "\n"
        - "static ip_address={{ network.ip_address }}"
        - "static routers={{ network.routers }}"
        - "static domain_name_servers={{ network.domain_name_servers }}"
      when: static_ip_set.stdout == "0"
    # -----------------------------------------------------------
    # Enable SSH
    # -----------------------------------------------------------
    - name: Enable SSH
      file:
        path: /boot/ssh
        state: touch
    # -----------------------------------------------------------
    # Optional - Set new password.
    # -----------------------------------------------------------
    - name: Update user password
      user:
        name: "{{ username }}"
        update_password: always
        password: "{{ password|password_hash('sha512') }}"
      when: password | length > 0
    # -----------------------------------------------------------
    # Setup Custom Aliases
    # -----------------------------------------------------------
    - name: Check if aliases file already exists
      stat:
        path: /home/{{ username }}/.bash_profile
      register: custom_aliases

    - name: Add custom aliases file '.bash_profile'
      lineinfile:
        path: "/home/{{ username }}/.bash_profile"
        state: present
        create: yes
        insertafter: EOF
        line: "{{ item }}"
      loop:
        - "\n"
        - "# Custom Aliases."
        - "# -----------------------------------"
        - alias ..="cd .."
        - alias ll="ls -l"
        - alias la="ls -la"
        - alias p="pwd"
        - 'alias a="source /home/{{username}}/.bash_profile"'
        - 'alias ae="code /home/{{username}}/.bash_profile"'
        - alias l.="ls -d .*"
        - alias act="source ./venv/bin/activate"
        - alias deact="deactivate"
        - "#==================================================="
        - "# Prompt"
        - "#==================================================="
        - "red=$(tput setaf 1)"
        - "green=$(tput setaf 2)"
        - "blue=$(tput setaf 4)"
        - "cyan=$(tput setaf 6)"
        - "reset=$(tput sgr0)"
        - "\n"
        - "function PROMPT_BRANCH() {"
        - "# Return the current branch or none if no .git is present."
        - "branch=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`"
        - "\n"
        - 'if [ -z "$branch" ]'
        - '\n'
        - 'then'
        - 'echo ""'
        - 'else'
        - 'echo " $cyan(${branch})$reset"'
        - 'fi'
        - '}'
        - "\n"
        - "export PS1='\[$red\][\t]\[$reset\]:\[$green\]\u-win\[$reset\]:\[$blue\]\W\[$reset\]$(PROMPT_BRANCH) \$ '"
      when: not custom_aliases.stat.exists
      
